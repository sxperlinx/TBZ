openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:9000
    description: Generated server url
paths:
  /:
    get:
      tags:
        - index
      summary: Get the index page
      operationId: index
      responses:
        '200':
          description: Index page found
  /db-init:
    get:
      tags:
        - db-init
      summary: Seed the database (Only do once)
      operationId: init_db
      responses:
        '200':
          description: Seeded
  /auth/signup:
    post:
      tags:
        - auth-controller
      summary: Create a new user
      operationId: signUp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpRequestDTO'
        required: true
      responses:
        '201':
          description: User was created successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignUpResponseDTO'
        '409':
          description: User could not be created, username already in use
  /auth/signin:
    post:
      tags:
        - auth-controller
      summary: Receive a token for BEARER authorization
      operationId: signIn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInRequestDTO'
        required: true
      responses:
        '200':
          description: Sign in successful
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SignInResponseDTO'
        '401':
          description: Invalid credentials
  /profiles/{id}:
    get:
      tags:
        - profile-controller
      summary: Get a single profile by Id
      security: []
      operationId: findById_1
      parameters:
        - name: id
          in: path
          description: Id of profile to get
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Profile found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProfileResponseDTO'
        '403':
          description: You are not allowed to view that user
        '404':
          description: Profile not found
    patch:
      tags:
        - profile-controller
      summary: Update a Profile
      security: []
      operationId: update_1
      parameters:
        - name: id
          in: path
          description: Id of profile to update
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileRequestDTO'
        required: true
      responses:
        '200':
          description: Profile was edited successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProfileResponseDTO'
        '403':
          description: You are not allowed to update that profile
        '404':
          description: Profile not found
        '409':
          description: Profile could not be updated
  /roles/name/{name}:
    get:
      tags:
        - role-controller
      summary: Get a role by its name
      security: []
      operationId: findByName_1
      parameters:
        - name: name
          in: path
          description: Name of role to get
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Role found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RoleDTO'
        '403':
          description: You are not allowed to view that role
        '404':
          description: Role not found
  /roles/{id}:
    get:
      tags:
        - role-controller
      summary: Get a single role by Id
      security: []
      operationId: findById_1
      parameters:
        - name: id
          in: path
          description: Id of role to get
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Role found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RoleDTO'
        '403':
          description: You are not allowed to view that role
        '404':
          description: Role not found
    delete:
      tags:
        - role-controller
      summary: Delete a role
      security: []
      operationId: deleteById_1
      parameters:
        - name: id
          in: path
          description: Id of role to delete
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Role was deleted
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RoleDTO'
        '403':
          description: You are not allowed to delete that role
        '404':
          description: Role not found
    patch:
      tags:
        - role-controller
      summary: Update a role
      security: []
      operationId: update_1
      parameters:
        - name: id
          in: path
          description: Id of role to update
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleDTO'
        required: true
      responses:
        '200':
          description: Role was edited successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RoleDTO'
        '403':
          description: You are not allowed to update that role
        '404':
          description: Role not found
        '409':
          description: Role could not be updated
  /roles/create:
    post:
      tags:
        - role-controller
      summary: Create a role
      security: []
      operationId: update_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleDTO'
        required: true
      responses:
        '201':
          description: Role was created successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RoleDTO'
        '403':
          description: You are not allowed to update that role
        '409':
          description: Role could not be created
  /users/{id}:
    get:
      tags:
        - user-controller
      summary: Get a single user by Id
      security: []
      operationId: findById_1
      parameters:
        - name: id
          in: path
          description: Id of user to get
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserResponseDTO'
        '403':
          description: You are not allowed to view that user
        '404':
          description: User not found
    delete:
      tags:
        - user-controller
      summary: Delete a user
      security: []
      operationId: deleteById_1
      parameters:
        - name: id
          in: path
          description: Id of user to delete
          required: true
          schema:
            type: string
      responses:
        '204':
          description: User was deleted
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserResponseDTO'
        '403':
          description: You are not allowed to delete that user
        '404':
          description: User not found
    patch:
      tags:
        - user-controller
      summary: Update a user
      security: []
      operationId: update_1
      parameters:
        - name: id
          in: path
          description: Id of user to update
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequestDTO'
        required: true
      responses:
        '200':
          description: User was edited successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserResponseDTO'
        '403':
          description: You are not allowed to update that user
        '404':
          description: User not found
        '409':
          description: User could not be updated
  /users:
    get:
      tags:
        - user-controller
      summary: Get all users, you need to be admin to do that
      security: []
      operationId: findAll_1
      responses:
        '200':
          description: Users found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserResponseDTO'
  /profiles:
    get:
      tags:
        - profile-controller
      summary: Get all profiles
      security: []
      operationId: findAll_1
      responses:
        '200':
          description: Profiles found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProfileResponseDTO'
  /roles:
    get:
      tags:
        - role-controller
      summary: Get all roles, you need to be admin to do that
      security: []
      operationId: findAll_1
      responses:
        '200':
          description: Roles found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RoleDTO'
components:
  schemas:
    SignUpRequestDTO:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string
    SignUpResponseDTO:
      type: object
      properties:
        userId:
          type: string
        profileId:
          type: string
        email:
          type: string
    SignInRequestDTO:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string
    SignInResponseDTO:
      type: object
      properties:
        accessToken:
          type: string
        userId:
          type: string
        profileId:
          type: string
    UserRequestDTO:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string
    UserResponseDTO:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        roleIds:
          type: array
          items:
            type: string
        profileId:
          type: string
    ProfileRequestDTO:
      type: object
      properties:
        username:
          type: string
        profilePicture:
          type: string
    ProfileResponseDTO:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        username:
          type: string
        profilePicture:
          type: string
    RoleDTO:
      type: object
      required:
        - name
      properties:
        id:
          type: string
        name:
          type: string
        assignedUserIds:
          type: array
          items:
            type: string
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
      bearerFormat: JWT