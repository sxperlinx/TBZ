{
	"info": {
		"_postman_id": "6679a0f7-a7dc-4532-ae2b-1011650474fd",
		"name": "API",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Scripts\" tab**\n\nAdding tests to your requests can help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/fa30ea0a-373d-4545-a668-e7b283cca343/aW1hZ2UucG5n\" width=\"2162\" height=\"1530\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n    \n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) to verify if the API works as expected and execute workflows.\n    \n\n## ðŸ’¡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "40065110"
	},
	"item": [
		{
			"name": "users",
			"item": [
				{
					"name": "passed",
					"item": [
						{
							"name": "admin findAll",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}{{userUri}}",
									"host": [
										"{{baseUrl}}{{userUri}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "moderator find all",
							"request": {
								"auth": {
									"type": "jwt",
									"jwt": [
										{
											"key": "payload",
											"value": "{\r\n      \"exp\": 1739022524,\r\n  \"sub\": \"moderator@localhost.com\",\r\n  \"scope\": \"MODERATOR USER\"\r\n}",
											"type": "string"
										},
										{
											"key": "secret",
											"value": "88cb30d4b5f661f4a1d1da585f21d8ca70fb886099b8176ef4a091300462bf86c572c2e0b624a5a84a866a85af00b5daa3d4aad4c7dcb4d9ebdf66a935026b6e6dd12584ae3406932776c3c03c691d98e75bfe53344d41574204d371a5fbb6d54d78c748aaf9063dcdfa5c6abbf1e9d6197c249bf73b4021d471902c38dd9e51cd2f509e7d3cebff770289592e411a3db0e9efa8938472f66bec43285ebcfc500f19b0d5d724de48f922317e625919be2b76168526b4778f7c2449aa5fb3dfb7a019b511009158fe6056f7481e469bdf889d45c157640230c61549d13415cab71840133f85765a805f30b0f32083bd19e4c7aec6fb10d1a60fb8ea8c3b4a838e",
											"type": "string"
										},
										{
											"key": "algorithm",
											"value": "HS256",
											"type": "string"
										},
										{
											"key": "isSecretBase64Encoded",
											"value": false,
											"type": "boolean"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "headerPrefix",
											"value": "Bearer",
											"type": "string"
										},
										{
											"key": "queryParamKey",
											"value": "token",
											"type": "string"
										},
										{
											"key": "header",
											"value": "{}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}{{userUri}}",
									"host": [
										"{{baseUrl}}{{userUri}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "user find all",
							"request": {
								"auth": {
									"type": "jwt",
									"jwt": [
										{
											"key": "payload",
											"value": "{\r\n      \"exp\": 1739022524,\r\n  \"sub\": \"moderator@localhost.com\",\r\n  \"scope\": \"USER\"\r\n}",
											"type": "string"
										},
										{
											"key": "secret",
											"value": "88cb30d4b5f661f4a1d1da585f21d8ca70fb886099b8176ef4a091300462bf86c572c2e0b624a5a84a866a85af00b5daa3d4aad4c7dcb4d9ebdf66a935026b6e6dd12584ae3406932776c3c03c691d98e75bfe53344d41574204d371a5fbb6d54d78c748aaf9063dcdfa5c6abbf1e9d6197c249bf73b4021d471902c38dd9e51cd2f509e7d3cebff770289592e411a3db0e9efa8938472f66bec43285ebcfc500f19b0d5d724de48f922317e625919be2b76168526b4778f7c2449aa5fb3dfb7a019b511009158fe6056f7481e469bdf889d45c157640230c61549d13415cab71840133f85765a805f30b0f32083bd19e4c7aec6fb10d1a60fb8ea8c3b4a838e",
											"type": "string"
										},
										{
											"key": "algorithm",
											"value": "HS256",
											"type": "string"
										},
										{
											"key": "isSecretBase64Encoded",
											"value": false,
											"type": "boolean"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "headerPrefix",
											"value": "Bearer",
											"type": "string"
										},
										{
											"key": "queryParamKey",
											"value": "token",
											"type": "string"
										},
										{
											"key": "header",
											"value": "{}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}{{userUri}}",
									"host": [
										"{{baseUrl}}{{userUri}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "valid find by ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}{{userUri}}/{{userId1}}",
									"host": [
										"{{baseUrl}}{{userUri}}"
									],
									"path": [
										"{{userId1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid find by ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}{{userUri}}/111d215f-52f7-45bc-b267-000000000000",
									"host": [
										"{{baseUrl}}{{userUri}}"
									],
									"path": [
										"111d215f-52f7-45bc-b267-000000000000"
									]
								}
							},
							"response": []
						},
						{
							"name": "valid update",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"postman@updated.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}{{userUri}}/{{userId2}}",
									"host": [
										"{{baseUrl}}{{userUri}}"
									],
									"path": [
										"{{userId2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid update",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"some-email.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}{{userUri}}/{{userId2}}",
									"host": [
										"{{baseUrl}}{{userUri}}"
									],
									"path": [
										"{{userId2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}{{userUri}}/{{userId2}}",
									"host": [
										"{{baseUrl}}{{userUri}}"
									],
									"path": [
										"{{userId2}}"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"description": "All endpoints tested successfully"
		},
		{
			"name": "auth",
			"item": [
				{
					"name": "passed",
					"item": [
						{
							"name": "valid sign in",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"admin@localhost.com\",\r\n    \"password\": \"admin123\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}{{authUri}}/signin",
									"host": [
										"{{baseUrl}}{{authUri}}"
									],
									"path": [
										"signin"
									]
								}
							},
							"response": []
						},
						{
							"name": "valid sign up",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"postman1\",\r\n    \"email\": \"postman1@localhost.com\",\r\n    \"password\": \"postman123\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}{{authUri}}/signup",
									"host": [
										"{{baseUrl}}{{authUri}}"
									],
									"path": [
										"signup"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid sign up",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"\",\r\n    \"email\": \"\",\r\n    \"password\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}{{authUri}}/signup",
									"host": [
										"{{baseUrl}}{{authUri}}"
									],
									"path": [
										"signup"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid sign in",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"invalid@test.com\",\r\n    \"password\": \"invalid\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}{{authUri}}/signin",
									"host": [
										"{{baseUrl}}{{authUri}}"
									],
									"path": [
										"signin"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"description": "All endpoints tested successfully"
		},
		{
			"name": "profiles",
			"item": [
				{
					"name": "passed",
					"item": [
						{
							"name": "find all",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}{{profileUri}}",
									"host": [
										"{{baseUrl}}{{profileUri}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "find by ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}{{profileUri}}/{{profileId1}}",
									"host": [
										"{{baseUrl}}{{profileUri}}"
									],
									"path": [
										"{{profileId1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "valid update",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"updated\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}{{profileUri}}/{{profileId2}}",
									"host": [
										"{{baseUrl}}{{profileUri}}"
									],
									"path": [
										"{{profileId2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid update",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \" \"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}{{profileUri}}/{{profileId2}}",
									"host": [
										"{{baseUrl}}{{profileUri}}"
									],
									"path": [
										"{{profileId2}}"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"description": "All endpoints tested successfully"
		},
		{
			"name": "questions",
			"item": [
				{
					"name": "passed",
					"item": [
						{
							"name": "find all",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}{{questionUri}}",
									"host": [
										"{{baseUrl}}{{questionUri}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "find by ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}{{questionUri}}/{{questionId1}}",
									"host": [
										"{{baseUrl}}{{questionUri}}"
									],
									"path": [
										"{{questionId1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "pagination",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}{{questionUri}}/get?itemsPerPage=2&currentPage=1",
									"host": [
										"{{baseUrl}}{{questionUri}}"
									],
									"path": [
										"get"
									],
									"query": [
										{
											"key": "itemsPerPage",
											"value": "2"
										},
										{
											"key": "currentPage",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "create",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"profileId\": \"{{profileId1}}\",\r\n    \"content\": \"Postman?\",\r\n    \"options\": [\r\n        {\r\n            \"content\": \"success\"\r\n        },\r\n        {\r\n            \"content\": \"failed\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}{{questionUri}}/create",
									"host": [
										"{{baseUrl}}{{questionUri}}"
									],
									"path": [
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "find by option ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}{{questionUri}}/get/options?optionId={{optionId1}}",
									"host": [
										"{{baseUrl}}{{questionUri}}"
									],
									"path": [
										"get",
										"options"
									],
									"query": [
										{
											"key": "optionId",
											"value": "{{optionId1}}"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "roles",
			"item": [
				{
					"name": "passed",
					"item": [
						{
							"name": "valid find all",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}{{roleUri}}",
									"host": [
										"{{baseUrl}}{{roleUri}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid find all",
							"request": {
								"auth": {
									"type": "jwt",
									"jwt": [
										{
											"key": "payload",
											"value": "{\r\n      \"exp\": 1739022524,\r\n  \"sub\": \"moderator@localhost.com\",\r\n  \"scope\": \"USER\"\r\n}",
											"type": "string"
										},
										{
											"key": "secret",
											"value": "88cb30d4b5f661f4a1d1da585f21d8ca70fb886099b8176ef4a091300462bf86c572c2e0b624a5a84a866a85af00b5daa3d4aad4c7dcb4d9ebdf66a935026b6e6dd12584ae3406932776c3c03c691d98e75bfe53344d41574204d371a5fbb6d54d78c748aaf9063dcdfa5c6abbf1e9d6197c249bf73b4021d471902c38dd9e51cd2f509e7d3cebff770289592e411a3db0e9efa8938472f66bec43285ebcfc500f19b0d5d724de48f922317e625919be2b76168526b4778f7c2449aa5fb3dfb7a019b511009158fe6056f7481e469bdf889d45c157640230c61549d13415cab71840133f85765a805f30b0f32083bd19e4c7aec6fb10d1a60fb8ea8c3b4a838e",
											"type": "string"
										},
										{
											"key": "algorithm",
											"value": "HS256",
											"type": "string"
										},
										{
											"key": "isSecretBase64Encoded",
											"value": false,
											"type": "boolean"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										},
										{
											"key": "headerPrefix",
											"value": "Bearer",
											"type": "string"
										},
										{
											"key": "queryParamKey",
											"value": "token",
											"type": "string"
										},
										{
											"key": "header",
											"value": "{}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}{{userUri}}",
									"host": [
										"{{baseUrl}}{{userUri}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "find by ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}{{roleUri}}/{{adminRoleId}}",
									"host": [
										"{{baseUrl}}{{roleUri}}"
									],
									"path": [
										"{{adminRoleId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid find by name",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}{{roleUri}}/name/some-name",
									"host": [
										"{{baseUrl}}{{roleUri}}"
									],
									"path": [
										"name",
										"some-name"
									]
								}
							},
							"response": []
						},
						{
							"name": "valid find by name",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}{{roleUri}}/name/{{userRoleName}}",
									"host": [
										"{{baseUrl}}{{roleUri}}"
									],
									"path": [
										"name",
										"{{userRoleName}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "create",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"TEST\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}{{roleUri}}/create",
									"host": [
										"{{baseUrl}}{{roleUri}}"
									],
									"path": [
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "update",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"UPDATED\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}{{roleUri}}/{{roleId}}",
									"host": [
										"{{baseUrl}}{{roleUri}}"
									],
									"path": [
										"{{roleId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}{{roleUri}}/{{roleId}}",
									"host": [
										"{{baseUrl}}{{roleUri}}"
									],
									"path": [
										"{{roleId}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "options",
			"item": [
				{
					"name": "passed",
					"item": [
						{
							"name": "find by ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}{{optionUri}}/{{optionId1}}",
									"host": [
										"{{baseUrl}}{{optionUri}}"
									],
									"path": [
										"{{optionId1}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "answers",
			"item": [
				{
					"name": "passed",
					"item": [
						{
							"name": "find all",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}{{answerUri}}",
									"host": [
										"{{baseUrl}}{{answerUri}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "find by ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}{{answerUri}}/{{answerId1}}",
									"host": [
										"{{baseUrl}}{{answerUri}}"
									],
									"path": [
										"{{answerId1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "find by option ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}{{answerUri}}/get/options?optionId={{optionId1}}",
									"host": [
										"{{baseUrl}}{{answerUri}}"
									],
									"path": [
										"get",
										"options"
									],
									"query": [
										{
											"key": "optionId",
											"value": "{{optionId1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "find by question ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}{{answerUri}}/get/questions?questionId={{questionId1}}",
									"host": [
										"{{baseUrl}}{{answerUri}}"
									],
									"path": [
										"get",
										"questions"
									],
									"query": [
										{
											"key": "questionId",
											"value": "{{questionId1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "create",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"profileId\": \"{{profileId2}}\",\r\n    \"optionId\": \"{{optionId1}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}{{answerUri}}/create",
									"host": [
										"{{baseUrl}}{{answerUri}}"
									],
									"path": [
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "update",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"profileId\": \"{{profileId2}}\",\r\n    \"optionId\": \"{{optionId1}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}{{answerUri}}/{{answerId1}}",
									"host": [
										"{{baseUrl}}{{answerUri}}"
									],
									"path": [
										"{{answerId1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}{{answerUri}}/{{answerId1}}",
									"host": [
										"{{baseUrl}}{{answerUri}}"
									],
									"path": [
										"{{answerId1}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "db-init",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/db-init",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"db-init"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "jwt",
		"jwt": [
			{
				"key": "payload",
				"value": "{\r\n      \"exp\": 1739022524,\r\n  \"sub\": \"admin@localhost.com\",\r\n  \"scope\": \"ADMIN MODERATOR USER\"\r\n}",
				"type": "string"
			},
			{
				"key": "secret",
				"value": "88cb30d4b5f661f4a1d1da585f21d8ca70fb886099b8176ef4a091300462bf86c572c2e0b624a5a84a866a85af00b5daa3d4aad4c7dcb4d9ebdf66a935026b6e6dd12584ae3406932776c3c03c691d98e75bfe53344d41574204d371a5fbb6d54d78c748aaf9063dcdfa5c6abbf1e9d6197c249bf73b4021d471902c38dd9e51cd2f509e7d3cebff770289592e411a3db0e9efa8938472f66bec43285ebcfc500f19b0d5d724de48f922317e625919be2b76168526b4778f7c2449aa5fb3dfb7a019b511009158fe6056f7481e469bdf889d45c157640230c61549d13415cab71840133f85765a805f30b0f32083bd19e4c7aec6fb10d1a60fb8ea8c3b4a838e",
				"type": "string"
			},
			{
				"key": "algorithm",
				"value": "HS256",
				"type": "string"
			},
			{
				"key": "isSecretBase64Encoded",
				"value": false,
				"type": "boolean"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			},
			{
				"key": "headerPrefix",
				"value": "Bearer",
				"type": "string"
			},
			{
				"key": "queryParamKey",
				"value": "token",
				"type": "string"
			},
			{
				"key": "header",
				"value": "{}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:9000",
			"type": "string"
		},
		{
			"key": "userUri",
			"value": "/users",
			"type": "string"
		},
		{
			"key": "authUri",
			"value": "/auth",
			"type": "string"
		},
		{
			"key": "roleUri",
			"value": "/roles",
			"type": "string"
		},
		{
			"key": "profileUri",
			"value": "/profiles",
			"type": "string"
		},
		{
			"key": "questionUri",
			"value": "/questions",
			"type": "string"
		},
		{
			"key": "optionUri",
			"value": "/options",
			"type": "string"
		},
		{
			"key": "answerUri",
			"value": "/answers",
			"type": "string"
		},
		{
			"key": "userId1",
			"value": "111d215f-52f7-45bc-b267-71c0f5ae5590",
			"type": "string"
		},
		{
			"key": "userId2",
			"value": "4beed4a9-1210-429a-8efc-7feba42a6bba",
			"type": "string"
		},
		{
			"key": "adminRoleId",
			"value": "07a8704b-598e-4b96-a046-f73348273473",
			"type": "string"
		},
		{
			"key": "userRoleName",
			"value": "USER",
			"type": "string"
		},
		{
			"key": "profileId1",
			"value": "c98745bd-bec1-486f-a044-a26b08632591",
			"type": "string"
		},
		{
			"key": "profileId2",
			"value": "a0178ac8-e4ea-40e5-95dd-2d37378fcdd2",
			"type": "string"
		},
		{
			"key": "questionId1",
			"value": "a4193dbe-71de-457a-ac05-f7c5d9643e21",
			"type": "string"
		},
		{
			"key": "optionId1",
			"value": "fe4599f6-c57f-4e82-8003-9d3bc1a5f3fe",
			"type": "string"
		},
		{
			"key": "optionId2",
			"value": "1a869e5e-0159-4921-be29-c94d7735731a",
			"type": "string"
		},
		{
			"key": "answerId1",
			"value": "a112ead1-2e06-418e-a0ac-91a1018ccc5d",
			"type": "string"
		},
		{
			"key": "roleId",
			"value": "3b2d21a6-314a-4596-81d5-9d74510e12e4",
			"type": "string"
		}
	]
}