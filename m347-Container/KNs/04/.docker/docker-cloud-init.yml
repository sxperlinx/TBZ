#cloud-config
# source: https://gist.github.com/syntaqx/9dd3ff11fb3d48b032c84f3e31af9163
users:
  - name: ubuntu
    sudo: ALL=(ALL) NOPASSWD:ALL
    groups: users, admin
    home: /home/ubuntu
    shell: /bin/bash
    ssh_authorized_keys:
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCUBo+qnNu5xxM9vfz4C04M36FHxHNrEMdm5TkFj1/SfVtqunlUOeMpu7nFCZZKnX8HYwf/MkjcBiTYAgncxku8grwl6XuW/pcvmb6/ghSIaw4xtRRSzit7omqJ5d8kXB3+Nd1aaMHsjfly4nkaqswhySVXQqr8Hw6DbWVw8jLLVKEE+5NZHY33hJkhJwK4blCllsGpmQaKi1qxjsN0hZOWNK01iJAydwD8t2xJ0NOYbq8Qas5IyPnRN7SPxvEhIP6WLQ6Ym6Dmf8FwNW1cHLTKabgjzt5f/HKUkKS89dPd3fn4nnFli1BOMECGUIvVlOw2pQNri7+04OOfn2FGlqr5 teacher
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC5J5spKO9mDVPnH1RQEhf09XqmoFLqrHUURRZiG3qn+R0eRPfB9D6m4Y7CK6MhKj+TZzp5vCMOI6OMYRNz3LH25J9SQ/cEY6KVf/R4dd5eELRGuFCEGV+zhdu49bC6bLe5oYHBT9855Np+Q+T5GEGa9lM/PGWhll4HTY4IF+oG1TUlXvbLTPCQlVn/HHmm00MeQ0qpyFPntx939JHsM689PDtCs+Uq6AeYklLqBIpeqHtXRT0HPJGJUAY1UJE64B0pW7F/+bx2uwEuVnkGGSIWcbK+jZrj8fBjq8eflepaD4xMFlL30MkzwdpC0o3yOHOfYjLEDZW+fEur5afQBtz47p0nBO56SNQ0o/x6FK2LdzNn0cfrvRG7fHNoLRO4wL9eTwfXEDt5A43jTpS0RY45N4qWE4ap1LOM5Lrx9ZF4CUIHP94omkVwy00MCtHURpDXP8hwyFzY5w5qNt1uKxPEyuteTe+XE6pDG4tPNvFIZKrMPc6chbyPwjTsfN3+l2bGM2P7roXP30uD7PmqIZJHTytUffkHv6HmNmD4HZo+8DWnjfknsTotiN0JHRjcuEJVW4bgpA9iW1YFQqpvbem1rHHi137AJTT8EjvcGbrZfP1IjHRqEO/cx6vVKPgxWi9sUYVtZm4fpYTUEQSaSkPdzyjigYJs5gyH0FiiU7ZX3Q== sxnic@sxnic
ssh_pwauth: false
disable_root: false
package_update: true
package_upgrade: true
groups:
  - docker
system_info:
  default_user:
    groups: [docker]
packages:
  - apt-transport-https
  - ca-certificates
  - curl
  - gnupg
  - lsb-release
  - unattended-upgrades
final_message: "The system is finally up, after $UPTIME seconds"
write_files:
  - path: /home/ubuntu/.docker/web.Dockerfile
    permissions: '0644'
    content: |
      FROM php:8.3.20-apache
      WORKDIR /var/www/html
      RUN docker-php-ext-install mysqli
      COPY /home/ubuntu/php .
      EXPOSE 80
  - path: /home/ubuntu/php/info.php
    permissions: '0644'
    content: |
      <?php
      phpinfo();
      ?>
  - path: /home/ubuntu/php/db.php
    permissions: '0644'
    content: |
      <?php
        //database
        $servername = "kn04a-db";
        $username = "root";
        $password = "tbzPass123";
        $dbname = "mysql";

        // Create connection
        $conn = new mysqli($servername, $username, $password, $dbname);
        // Check connection
        if ($conn->connect_error) {
                die("Connection failed: " . $conn->connect_error);
        }

        $sql = "select Host, User from mysql.user;";
        $result = $conn->query($sql);
        while($row = $result->fetch_assoc()){
                echo($row["Host"] . " / " . $row["User"] . "<br />");
        }
        //var_dump($result);
      ?>
  - path: /home/ubuntu/docker-compose.yml
    permissions: '0644'
    content: |
      name: kn04a

      services:
        web:
          container_name: kn04a-web
          build:
            context: /home/ubuntu
            dockerfile: .docker/web.Dockerfile
          restart: always
          ports:
            - 80:80
          depends_on:
            - db
          networks:
            - backbone
        db:
          container_name: kn04a-db
          image: mariadb:latest
          environment:
            - MARIADB_ROOT_PASSWORD=tbzPass123
          ports:
            - 3306:3306
          networks:
            - backbone
          volumes:
            - db_data:/var/lib/mysql

      networks:
        backbone:
          driver: bridge
          ipam:
            config:
              - subnet: 172.10.0.0/16
                ip_range: 172.10.5.0/24
                gateway: 172.10.5.254

      volumes:
        db_data:
          driver: local


runcmd:
  - mkdir -p /etc/apt/keyrings
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
  - echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
  - apt-get update
  - apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
  - systemctl enable docker
  - systemctl start docker
  # Erwetiern Sie hier die Befehle!
  - docker compose -f /home/ubuntu/docker-compose.yml up -d
