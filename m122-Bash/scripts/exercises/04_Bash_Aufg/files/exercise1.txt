# Aufgabenblock 1:

# 1. ----
# Erzeugt Benutzer anhand einer Liste von Benutzernamen in einer
# Textdatei (via Parameter angegebenen).
# Hinweis: Benutzen Sie useradd und cat.

#user_list="./files/user.txt"  
#
#for user in $(cat $user_list); do
#    if id "$user" >/dev/null 2>&1; then
#        echo "Benutzer $user existiert bereits."
#    else
#        echo "Benutzer $user wird erstellt."
#        sudo useradd $user
#    fi
#done
#
#sudo chmod +x ./exercise1.sh
#sudo ./exercise1.sh $user_list
#cat /etc/passwd > ./files/newUsers.txt
#
## ---- USERS HAVE BEEN SUCCESSFULLY CREATED
## ---- 
## ---- DELETE USERS NOW:
#
#for user in $(cat $user_list); do
#    if id "$user" >/dev/null 2>&1; then
#        echo "Benutzer $user wird gelöscht."
#        sudo userdel $user
#    else
#        echo "Benutzer $user existiert nicht."
#    fi
#done
#
#sudo chmod +x ./exercise1.sh
#sudo ./exercise1.sh ./files/user.txt
#cat $user_list

# echo "2. ----"
# echo "Fügt einen Benutzer anhand einer Liste von Gruppen in einer Textdatei (via Parameter angegebenen) den jeweiligen Gruppen hinzu."
# echo "Hinweis: Benutzen Sie groupadd , usermod und cat. Achtung es gibt für jeden Benutzer jeweils eine Initial login group und mehrere Supplementary groups."
# echo "3. ----"
# echo "Findet alle Dateien, welche einem (via Parameter angegebenen) Benutzer gehören und kopiert diese an den aktuellen Ort. Die kopierten Dateien werden zu einem tar.gz Archiv zusammengefasst und danach gelöscht. Die Archivdatei wird mit dem Benutzernamen und dem aktuellen Datum benannt. Hinweis: Benutzen Sie find, tar, rm und date."
# echo "4. ----"
# echo "Ermittelt die eigene IP-Adresse und macht einen PING-Sweep für das Subnetz der eigenen IP. Gibt aus, welche Hosts up sind und speichert die IP-Adressen der Hosts in einer Textdatei. Hinweis: Benutzen Sie ping (oder fping), ifconfig und grep."
# echo "5. ----"
# echo "Ermittelt die Events der Stadt Zürich für das aktuellen Datum von usgang.ch. Erweitern Sie das Skript danach auf beliebige Städte (unter usgang.ch gelistete) und die Angabe eines Datums (wenn kein Datum angegeben wird, wird das aktuelle angewendet). Hinweis: Benutzen Sie curl, grep und cut. Der erste, der ein funktionierendes Skript für diese Aufgabe einsendet, gewinnt "Gipfeli und Schoggistengeli" ."
# echo "--------------------------------------------------"
# echo "Aufgabenblock 2:"
# echo "1. ----"
# echo "Erstellen Sie einen Ordner /root/trash und erzeugen Sie einige Dateien darin. Erstellen Sie ein Skript, welches alle 5 Minuten die Dateien innerhalb von diesem Ordner löscht (für Infos siehe auch Link 3 im Anhang). Überprüfen Sie, ob ihr Skript korrekt eingerichtet ist, indem Sie nachsehen, ob die Files nach 5 Minuten"
# echo "gelöscht wurden."
# echo "Cronjob:"
# echo "Bild auf Gitlab URL: https://gitlab.com/ch-tbz-it/Stud/m122/-/tree/main/04_Bash_Aufg?ref_type=heads"
# 
# echo "2. ----"
# 
# echo "Erstellen Sie ein Skript, mit welchem eine IP-Adressrange bannen oder unbannen können. Es gibt unterschiedliche Tools, womit Sie diese Funktionalität umsetzen können. Verwenden Sie das Internet zur Informationssuche."
# 
# echo "3. ----"
# 
# echo "Erstellen Sie folgende Benutzer und Gruppen. Benutzen Sie zur"
# echo "Automatisierung die Skripte aus den Übungen. Versuchen"
# echo "Sie den Prozess der Erstellung möglichst stark zu automatisieren:"
# echo "Bild auf Gitlab URL: https://gitlab.com/ch-tbz-it/Stud/m122/-/tree/main/04_Bash_Aufg?ref_type=heads"
# 
# # --------------------------------------------------
#  
# # Lösung Aufgaben 1 & 2
# # Aufgabe 1.1:
# # Der Dateiname, welcher die Benutzernamen beinhaltet, wird mit $1
# # übergeben: z.B. "benutzer.txt"
# # 
# #     #!/bin/bash
# #     
# #     #In aufg1.sh gespeichert!	
# #     
# #     for user in $(cat $1); do
# #         useradd $user; 
# #     done
# # 
# # [user@host ~]$ [sudo] chmod +x ./aufg1.sh
# # [user@host ~]$ [sudo] ./aufg1.sh benutzer.txt
# # 
# # [user@host ~]$ cat /etc/passwd
# # Aufgabe 1.2:
# # Der Dateiname, welcher die Gruppen beinhaltet, wird mit dem ersten Parameter $1 übergeben,
# # der Benutzernamen mit den zweiten Parameter $2.
# # 
# # 	#!/bin/bash
# # 	for group in $(cat $1); do
# # 	    groupadd -f $group | usermod -a -G $group $2 #$2 ist username
# # 	done
# # 
# # [user@host ~]$ [sudo] ./aufg2.sh gruppen.txt 'benutzer'
# # 
# # [user@host ~]$ cat /etc/passwd
# # [user@host ~]$ id 'benutzer'
# # Aufgabe 1.3:
# Der Benutzername wird mit $1 übergeben. (Verzeichnis user anpassen)
# # 
# #     #!/bin/bash
# # 	name=$1_$(date '+%y-%m-%d').tar.gz;
# # 	find /home/user/* -user $1 -exec cp {} /home/user/Docs/found/ \;
# # 	tar -zcvf /home/user/Docs/found/$name /home/user/Docs/found/;
# # 	find /home/user/Docs/found/ -type f ! -name $name -delete;
## Aufgabe 1.4:
## Das Tool fping muss installiert sein ([user@host ~]$ [sudo] apt-get install fping).
## 
##     #!/bin/bash
##     for i in $( ifconfig | grep "inet" | grep -v "127.0.0.1" | cut -d ":" -f 2 | cut -d "." -f 1-3 ); do
##         for k in $(seq 1 255); do
##             fping -c 1 -t250 $i.$k 2>&1 |  grep " 0% " | cut -d " " -f 1 >ips.txt
##         done
##     done
## 
##     #alternative Lösung:
##     fping -g -c 1 -t250 172.16.6.0/24 2>&1 | grep " 0% " | cut -d " " -f 1 ips.txt
## Aufgabe 2.1:
## Wenn Sie keinen Zugriff auf /root/trash haben, nehmen Sie einen anderen Ordner...
## 
##     [root@host: ~]# [sudo] mkdir /root/trash
##     [root@host: ~]# [sudo] touch /root/trash/file{1..10}
##     [root@host: ~]# [sudo] nano /root/trash.sh
##     
##     
##      #!/bin/bash
##      rm /root/trash/*
##     
##     
##     [root@host: ]# [sudo] chmod +x trash.sh
##     [root@host: ]# [sudo] crontab -e
##     
##      */5 * * * * /root/trash.sh
##     
##     [root@host: ]# watch ls /root/trash  
##     
##     (Warten bis files verschwinden --erfolgreiche Ausführung)
## Aufgabe 2.2:
## IP wird als $1 übergeben, ban oder unban als $2.
## 
##     #!/bin/bash
##     if [ $2 -eq "ban" ]; then
##         echo "banning " $1
##         iptables -A INPUT -s $1 -j DROP
##     elif [ $2 -eq "unban" ];then
##         echo "unbanning " $1
##         iptables -D INPUT -s $1 DROP
##     else
##         echo "Verwendung:"
##         echo "1.Arg: IP-Adresse" 
##         echo "2.Arg.: ban oder unban"  
##         echo "Beispiel: ./ban.sh 192.168.13.3 ban"
##     fi
## Aufgabe 2.4:
## Setzen des SGID Bits (3 verschiedene Varianten):
## 
##     [user@host: ~]$ chmod g+s  /data/myFile 
##     [user@host: ~]$ chmod +s   /data/myFile
##     [user@host: ~]$ chmod 2755 /data/myFile
## Setzen des Sticky Bits (3 verschiedene Varianten):
## 
##     [user@host: ~]$ chmod o+t  /data 
##     [user@host: ~]$ chmod +t   /data
##     [user@host: ~]$ chmod 1755 /data